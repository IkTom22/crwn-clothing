{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect'; // const COLLECTION_ID_MAP = {\n//     hats: 1, \n//     sneakers: 2, \n//     jackets: 3,\n//     womens: 4,\n//     mens: 5\n// }\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // export const selectCollection = memoize(collectionUrlParam =>\n//     createSelector(\n//         [selectCollections],\n//         (collections) => \n//             collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n//     )\n// );\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null));\nexport const selectIsCollectionsFetching = createSelector([selectShop], shop => shop.isFetching); //!!0 (returns false), !!'' ( false), !!null (false), but, !!{} returns true\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/client/src/redux/shop/shop.selectors.js"],"names":["memoize","createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,QAA8B,UAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAGA,OAAO,MAAMC,iBAAiB,GAAEJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAGA,IAAI,CAACE,WAF8B,CAAvC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErDC,WAAW,IAAIA,WAAW,GAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAJ,GAA4D,EAFjC,CAAlD,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGZ,OAAO,CAAEa,kBAAD,IACnCZ,cAAc,CACX,CAACI,iBAAD,CADW,EAEXC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFpD,CADoB,CAAhC;AAOP,OAAO,MAAMC,2BAA2B,GAAGb,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,UAFwC,CAAlD,C,CAKP;;AACA,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACnD,CAACC,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import memoize from 'lodash.memoize';\r\nimport { createSelector} from 'reselect';\r\n\r\n// const COLLECTION_ID_MAP = {\r\n//     hats: 1, \r\n//     sneakers: 2, \r\n//     jackets: 3,\r\n//     womens: 4,\r\n//     mens: 5\r\n// }\r\nconst selectShop = state => state.shop;\r\n\r\n\r\nexport const selectCollections= createSelector(\r\n    [selectShop],\r\n    shop=> shop.collections\r\n)\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ?  Object.keys(collections).map(key => collections[key]) : []\r\n)\r\n// export const selectCollection = memoize(collectionUrlParam =>\r\n//     createSelector(\r\n//         [selectCollections],\r\n//         (collections) => \r\n//             collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n//     )\r\n// );\r\nexport const selectCollection = memoize((collectionUrlParam) => \r\n     createSelector(\r\n        [selectCollections],\r\n        collections => collections ? collections[collectionUrlParam] : null\r\n    )\r\n)\r\n\r\nexport const selectIsCollectionsFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\n//!!0 (returns false), !!'' ( false), !!null (false), but, !!{} returns true\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n)"]},"metadata":{},"sourceType":"module"}