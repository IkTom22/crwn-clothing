{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccsess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccsess(collectionsMap)); //this.setState({ loading: false});\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccsess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,SACIC,wBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACX,wBAAwB,CAACU,cAAD,CAAzB,CAAR,CAFiC,CAGjC;AACH,GAJD,EAIGE,KAJH,CAISC,KAAK,IAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAMH;AACD,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXd,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccsess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired')\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    \r\n    collectionRef.get().then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccsess(collectionsMap));\r\n        //this.setState({ loading: false});\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n}\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}