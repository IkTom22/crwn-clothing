{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // export const updateCollections = (collectionsMap) =>({\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\n//     payload: collectionsMap\n// })\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccsess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCSESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccsess(collectionsMap)); //this.setState({ loading: false});\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccsess","collectionsMap","FETCH_COLLECTIONS_SUCCSESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAN,CAA9B;AAIP,OAAO,MAAMC,wBAAwB,GAAGC,cAAc,KAAI;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,0BADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAJ,CAA/C;AAMP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAIP,OAAO,MAAME,0BAA0B,GAAG,MAAK;AAC3C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,wBAAwB,CAACC,cAAD,CAAzB,CAAR,CAFiC,CAGjC;AACH,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\n// export const updateCollections = (collectionsMap) =>({\r\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n//     payload: collectionsMap\r\n// })\r\n\r\nexport const fetchCollectionsStart = () =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccsess = collectionsMap =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCSESS,\r\n    payload: collectionsMap\r\n\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n}) \r\nexport const fetchCollectionsStartAsync = () =>{\r\n    return dispatch =>{\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccsess(collectionsMap));\r\n            //this.setState({ loading: false});\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}