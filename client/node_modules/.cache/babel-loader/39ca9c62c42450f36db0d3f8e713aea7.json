{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect'; // const COLLECTION_ID_MAP = {\n//     hats: 1, \n//     sneakers: 2, \n//     jackets: 3,\n//     womens: 4,\n//     mens: 5\n// }\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collection); // export const selectCollection = memoize(collectionUrlParam =>\n//     createSelector(\n//         [selectCollections],\n//         (collections) => \n//             collection.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n//     )\n// );\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections[collectionUrlParam]));","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/redux/shop/shop.selectors.js"],"names":["memoize","createSelector","selectShop","state","shop","selectCollections","collection","selectCollection","collectionUrlParam","collections"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,QAA8B,UAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAEJ,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAGA,IAAI,CAACE,UAF8B,CAAvC,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGP,OAAO,CAAEQ,kBAAD,IACnCP,cAAc,CACX,CAACI,iBAAD,CADW,EAEXI,WAAW,IAAIA,WAAW,CAACD,kBAAD,CAFf,CADoB,CAAhC","sourcesContent":["import memoize from 'lodash.memoize';\r\nimport { createSelector} from 'reselect';\r\n\r\n// const COLLECTION_ID_MAP = {\r\n//     hats: 1, \r\n//     sneakers: 2, \r\n//     jackets: 3,\r\n//     womens: 4,\r\n//     mens: 5\r\n// }\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections= createSelector(\r\n    [selectShop],\r\n    shop=> shop.collection\r\n)\r\n\r\n// export const selectCollection = memoize(collectionUrlParam =>\r\n//     createSelector(\r\n//         [selectCollections],\r\n//         (collections) => \r\n//             collection.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n//     )\r\n// );\r\nexport const selectCollection = memoize((collectionUrlParam) => \r\n     createSelector(\r\n        [selectCollections],\r\n        collections => collections[collectionUrlParam]\r\n    )\r\n)"]},"metadata":{},"sourceType":"module"}