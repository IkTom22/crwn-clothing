{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesur\\\\Desktop\\\\ecommerce-project\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart, isGoogleSignInStart } from '../../redux/user/users.actions';\nimport { SignInContainer, SignInTitle, SignInButton } from './sign-in.styles'; //import './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"email\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SignInButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToPtops = dispatch => ({\n  isGoogleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToPtops)(SignIn);","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","isGoogleSignInStart","SignInContainer","SignInTitle","SignInButton","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToPtops","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport {googleSignInStart, isGoogleSignInStart } from '../../redux/user/users.actions';\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    SignInButton\r\n} from './sign-in.styles';\r\n//import './sign-in.styles.scss';\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    handleSubmit = async e =>{\r\n        e.preventDefault()\r\n\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password)\r\n            this.setState({email: '', password: ''});\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\nhandleChange = (e) =>{\r\n    const { value, name} = e.target;\r\n    this.setState({[name]: value})\r\n}\r\n    render(){\r\n        const { googleSignInStart} = this.props;\r\n        return(\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        name=\"email\"   \r\n                        type=\"email\" \r\n                        value={this.state.email} \r\n                        label=\"email\"\r\n                        handleChange={this.handleChange}\r\n                        required \r\n                    />\r\n             \r\n                    <FormInput\r\n                        name=\"password\" \r\n                        type=\"password\" \r\n                        value={this.state.password} \r\n                        label=\"password\"\r\n                        handleChange={this.handleChange}\r\n                        required \r\n                    />\r\n                    <SignInButton>\r\n                        <CustomButton type=\"submit\" >Sign in</CustomButton>\r\n                        <CustomButton \r\n                            type=\"button\" \r\n                            onClick={googleSignInStart} \r\n                            isGoogleSignIn\r\n                        >\r\n                         \r\n                            Sign in with Google \r\n                        </CustomButton>\r\n                    </SignInButton>\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToPtops = dispatch => ({\r\n    isGoogleSignInStart: () =>dispatch(googleSignInStart())\r\n})\r\nexport default connect(null, mapDispatchToPtops)(SignIn);"]},"metadata":{},"sourceType":"module"}