{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccsess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef.get().then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccsess(collectionsMap));\n  //     //this.setState({ loading: false});\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccsess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,SACIC,wBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAOC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAxB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC,CALqC,CAOrC;AACA;AACA;AACA;AACA;AAEH;AACD,OAAO,UAAUG,oBAAV,GAAiC;AACpC,QAAMf,SAAS,CACXE,eAAe,CAACc,uBADL,EAEXT,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccsess,\r\n    fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired')\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    const  snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n    \r\n    // collectionRef.get().then(snapshot => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //     dispatch(fetchCollectionsSuccsess(collectionsMap));\r\n    //     //this.setState({ loading: false});\r\n    // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n}\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}