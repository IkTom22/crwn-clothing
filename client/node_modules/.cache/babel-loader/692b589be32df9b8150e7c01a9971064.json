{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './users.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    display\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        display\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  user,\n  additionalData\n}) {\n  try {} catch (error) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","display","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {\r\n    auth, \r\n    googleProvider, \r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils';\r\nimport {\r\n    signInSuccess,  \r\n    signInFailure, \r\n    signOutSuccess, \r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n} from './users.actions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\r\n    } catch(error){\r\n        yield put(signInFailure(error))\r\n    \r\n    }\r\n}\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error){\r\n        yield put(signInFailure(error))\r\n        \r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* isUserAuthenticated(){\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch(error){\r\n        yield put(signInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    } catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signUp({payload: {email, password, display}}){\r\n    try{    \r\n        const {user } = yield auth.createUserWithEmailAndPassword(\r\n            email, \r\n            password\r\n        );  \r\n        yield put(signUpSuccess({user, additionalData: {display}}))  \r\n    } catch(error){\r\n        yield   put(signUpFailure(error))\r\n    }   \r\n}\r\n\r\nexport function* signInAfterSignUp({user, additionalData}){\r\n    try{\r\n\r\n    } catch(error){\r\n\r\n    }\r\n}\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle );\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut )\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart)\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}