{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesur\\\\Desktop\\\\ecommerce-project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStatrtAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStatrtAsync\n    } = this.props;\n    fetchCollectionsStatrtAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetchingCollections,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        inLoading: !isCollectionsLoadeds\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        inLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStatrtAsync: () => dispatch(fetchCollectionsStatrtAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","WithSpinner","CollectionOverview","CollectionPage","fetchCollectionsStatrtAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetchingCollections","isCollectionsLoaded","path","isCollectionsLoadeds","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,iCAApE;AACA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAE;AAEf,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,2BAA2B;AAC9B;;AAGFS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,qBAAR;AAA+BC,MAAAA;AAA/B,QAAuD,KAAKJ,KAAlE;AAEA,wBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,6BAAD;AACA,QAAA,SAAS,EAAI,CAACM;AADd,SAEIN,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,yBAAD;AACA,QAAA,SAAS,EAAI,CAACI;AADd,SAEIJ,KAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADL;AAqBH;;AAjCmC;;AAoCvC,MAAMO,eAAe,GAAGpB,wBAAwB,CAAC;AAC7CgB,EAAAA,qBAAqB,EAAEV,0BADsB;AAE7CW,EAAAA,mBAAmB,EAAEV;AAFwB,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,2BAA2B,EAAE,MAAMiB,QAAQ,CAACjB,2BAA2B,EAA5B;AADP,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {connect} from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { fetchCollectionsStatrtAsync } from '../../redux/shop/shop.actions'\r\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors';\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    componentDidMount(){\r\n\r\n        const { fetchCollectionsStatrtAsync} = this.props;\r\n        fetchCollectionsStatrtAsync()\r\n    }\r\n\r\n\r\n   render(){\r\n       const {match, isFetchingCollections, isCollectionsLoaded } = this.props;\r\n      \r\n       return ( \r\n            <div>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`} \r\n                    render={(props) => (\r\n                        <CollectionOverviewWithSpinner \r\n                        inLoading = {!isCollectionsLoadeds}\r\n                        {...props} \r\n                        />)}\r\n                />\r\n                <Route \r\n                    path={`${match.path}/:collectionId`} \r\n                    render={(props) => (\r\n                        <CollectionPageWithSpinner \r\n                        inLoading = {!isCollectionsLoaded}\r\n                        {...props} \r\n                        />)}\r\n                />    \r\n            </div>\r\n        )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetchingCollections: selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStatrtAsync: () => dispatch(fetchCollectionsStatrtAsync())\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}