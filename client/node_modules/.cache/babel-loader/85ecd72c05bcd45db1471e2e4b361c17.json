{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesur\\\\Desktop\\\\ecommerce-project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); // collectionRef.get().then(snapshot => {\n    //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionMap);\n    //     this.setState({ loading: false});\n    // });\n    // collectionRef.onSnapshot(async(snapshot) =>{\n    //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //    updateCollections(collectionsMap);\n    //    this.setState({loading: false});\n    // });\n\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/cesur/Desktop/ecommerce-project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionOverview","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,MAAMC,6BAA6B,GAAGN,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC7B;AACFC,MAAAA,OAAO,EAAE;AADP,KAD6B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAE;AACf,UAAK;AAACV,MAAAA;AAAD,QAAuB,KAAKW,KAAjC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB,CAFe,CAIf;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AAC7B,YAAMC,aAAa,GAAGf,+BAA+B,CAACc,QAAD,CAArD;AACAhB,MAAAA,iBAAiB,CAACiB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJL;AAKH;;AAEFW,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKT,KAAtB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGV,KAAD,iBAAY,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGV,KAAD,iBAAY,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADL;AAaH;;AA5CmC;;AA+CvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEwB,cAAc,IAChCD,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AAF2B,CAAL,CAAnC;;AAIA,eAAe5B,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {updateCollections} from '../../redux/shop/shop.actions'\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state={\r\n        loading: true\r\n    };\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const{updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        // collectionRef.get().then(snapshot => {\r\n        //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionMap);\r\n        //     this.setState({ loading: false});\r\n        // });\r\n\r\n        // collectionRef.onSnapshot(async(snapshot) =>{\r\n        //    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //    updateCollections(collectionsMap);\r\n        //    this.setState({loading: false});\r\n        // });\r\n        collectionRef.get().then(snapshot => {\r\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionMap);\r\n                this.setState({ loading: false});\r\n            });\r\n    }\r\n\r\n   render(){\r\n       const {match } = this.props;\r\n       const { loading } = this.state;\r\n       return ( \r\n            <div>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`} \r\n                    render={(props) => (<CollectionOverviewWithSpinner isLoading={loading} {...props} />)}\r\n                />\r\n                <Route \r\n                    path={`${match.path}/:collectionId`} \r\n                    render={(props) => (<CollectionPageWithSpinner isLoading={loading} {...props} />)}\r\n                />    \r\n            </div>\r\n        )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap =>\r\n     dispatch(updateCollections(collectionsMap))\r\n})\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}